pipeline {
    
    agent any

    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout Code from GitHub'
                git branch: 'master', url: 'https://github.com/Rekapost/AmazonTestNG.git'
            }
        }

        stage('Docker Version Check') {
            steps {
                bat 'docker --version'  // Check if Docker is accessible
            }
        }

    stage('Build and Push Docker Image') {
      environment {
        DOCKER_IMAGE = "reka83/amazon-testng:${BUILD_NUMBER}"
        REGISTRY_CREDENTIALS = credentials('docker-cred')
      }
      steps {
        script {
            sh 'docker build -t ${DOCKER_IMAGE} .'
            // Pushing the Docker image to Docker Hub
            def dockerImage = docker.image("${DOCKER_IMAGE}")
            docker.withRegistry('https://index.docker.io/v1/', "docker-cred") {
            dockerImage.push()
            }
        }
      }
    }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "AmazonTestNG"
                GIT_USER_NAME = "Rekapost"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    echo 'Updating Deployment File'
                    bat '''
                        git config user.email "rekaharisri@gmail.com"
                        git config user.name "Reka"
                        
                        BUILD_NUMBER=${BUILD_NUMBER}
                       
                        # Update the deployment file with the new build number
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-app-manifests/deployment.yml
                        
                        git add java-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:master
                    '''
                }
            }
        }
    }
}
