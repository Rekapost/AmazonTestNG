pipeline {
    agent {
        docker {
            image 'abhishekf5/maven-abhishek-docker-agent:v1'
            args '--user root -v /var/run/docker.sock:/var/run/docker.sock' // mount Docker socket to access the host's Docker daemon
        }
    }

    stages {
        stage('Checkout') {
            steps {
                echo 'Checkout Code from GitHub'
                git branch: 'master', url: 'https://github.com/Rekapost/AmazonTestNG.git'
                sh 'ls -ltr'  // Verify files
            }
        }

        stage('Switch Docker Context to Default') {
            steps {
                // Ensure Docker is using the 'default' context
                sh 'docker context use default'
            }
        }

        stage('Docker Version Check') {
            steps {
                sh 'docker --version'  // Check if Docker is accessible
            }
        }

        stage('Docker Login') {
            steps {
                withCredentials([string(credentialsId: 'docker-cred', variable: 'DOCKER_PASSWORD')]) {
                    sh '''
                        echo $DOCKER_PASSWORD | docker login -u reka83 --password-stdin https://index.docker.io/v1/
                    '''
                }
            }
        }

        stage('Build and Push Docker Image') {
            environment {
                DOCKER_IMAGE = "reka83/amazon-testng:${BUILD_NUMBER}"
            }
            steps {
                script {
                    echo 'Building Docker Image'
                    sh "docker build -t ${DOCKER_IMAGE} ."
                    
                    echo 'Pushing Docker Image to Docker Hub'
                    def dockerImage = docker.image("${DOCKER_IMAGE}")
                    docker.withRegistry('https://index.docker.io/v1/', 'docker-cred') {
                        dockerImage.push()
                    }
                }
            }
        }

        stage('Update Deployment File') {
            environment {
                GIT_REPO_NAME = "AmazonTestNG"
                GIT_USER_NAME = "Rekapost"
            }
            steps {
                withCredentials([string(credentialsId: 'github', variable: 'GITHUB_TOKEN')]) {
                    echo 'Updating Deployment File'
                    sh '''
                        git config user.email "rekaharisri@gmail.com"
                        git config user.name "Reka"
                        
                        BUILD_NUMBER=${BUILD_NUMBER}
                       
                        # Update the deployment file with the new build number
                        sed -i "s/replaceImageTag/${BUILD_NUMBER}/g" java-app-manifests/deployment.yml
                        
                        git add java-app-manifests/deployment.yml
                        git commit -m "Update deployment image to version ${BUILD_NUMBER}"
                        git push https://${GITHUB_TOKEN}@github.com/${GIT_USER_NAME}/${GIT_REPO_NAME}.git HEAD:master
                    '''
                }
            }
        }
    }
}
